<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'routing.loader' shared service.

$a = ($this->services['kernel'] ?? $this->get('kernel'));

$b = new \Symfony\Component\HttpKernel\Config\FileLocator($a, ($this->targetDirs[2].'/Resources'), array(0 => $this->targetDirs[2]));

$c = new \Doctrine\Common\Annotations\CachedReader(($this->privates['annotations.reader'] ?? $this->load('getAnnotations_ReaderService.php')), new \Doctrine\Common\Cache\ArrayCache(), true);
$c->cacheProviderBackup = function () {
    return ($this->privates['annotations.cache'] ?? $this->load('getAnnotations_CacheService.php'));
};

$d = new \Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader($c);

$e = new \Symfony\Component\Config\Loader\LoaderResolver();
$e->addLoader(new \Symfony\Component\Routing\Loader\XmlFileLoader($b));
$e->addLoader(new \Symfony\Component\Routing\Loader\YamlFileLoader($b));
$e->addLoader(new \Symfony\Component\Routing\Loader\PhpFileLoader($b));
$e->addLoader(new \Symfony\Component\Routing\Loader\GlobFileLoader($b));
$e->addLoader(new \Symfony\Component\Routing\Loader\DirectoryLoader($b));
$e->addLoader(new \Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader($this));
$e->addLoader($d);
$e->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($b, $d));
$e->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($b, $d));

return $this->services['routing.loader'] = new \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader(($this->privates['controller_name_converter'] ?? $this->privates['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser($a)), $e);
